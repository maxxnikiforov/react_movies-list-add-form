{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","validUrl","NewMovie","state","errTitle","errImgUrl","errImdbUrl","errImdbId","handleInput","event","target","name","value","setState","validationTitle","trim","validationImgUrl","test","validationImdbUrl","validationImdbId","onSubmit","addMovie","props","preventDefault","this","classNames","form__inputErr","type","placeholder","required","onBlur","onChange","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1a036e5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie:(\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string\n  ) => void\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  errTitle: string | null,\n  errImgUrl: string | null,\n  errImdbUrl: string | null,\n  errImdbId: string | null,\n};\n\n// eslint-disable-next-line\nconst validUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errTitle: '',\n    errImgUrl: '',\n    errImdbUrl: '',\n    errImdbId: '',\n  };\n\n  handleInput = (event:\n  React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state: State) => ({\n      ...state,\n      [name]: value,\n    }));\n\n    if (name === 'title') {\n      this.setState({\n        errTitle: null,\n      });\n    }\n\n    if (name === 'imgUrl') {\n      this.setState({\n        errImgUrl: null,\n      });\n    }\n\n    if (name === 'imdbUrl') {\n      this.setState({\n        errImdbUrl: null,\n      });\n    }\n\n    if (name === 'imdbId') {\n      this.setState({\n        errImdbId: null,\n      });\n    }\n  };\n\n  validationTitle = () => {\n    const { title } = this.state;\n\n    if (!title.trim()) {\n      this.setState({\n        errTitle: 'Please input Title',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validationImgUrl = () => {\n    const { imgUrl } = this.state;\n\n    if (!imgUrl.trim() || !validUrl.test(imgUrl)) {\n      this.setState({\n        errImgUrl: 'Please input correct Img Url',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validationImdbUrl = () => {\n    const { imdbUrl } = this.state;\n\n    if (!imdbUrl.trim() || !validUrl.test(imdbUrl)) {\n      this.setState({\n        errImdbUrl: 'Please input correct Imdb Url',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  validationImdbId = () => {\n    const { imdbId } = this.state;\n\n    if (!imdbId.trim()) {\n      this.setState({\n        errImdbId: 'Please input ImdbId',\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  onSubmit = (event: React.SyntheticEvent) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    if (this.validationTitle() && this.validationImgUrl()\n     && this.validationImdbUrl() && this.validationImdbId()) {\n      addMovie(title, description, imgUrl, imdbUrl, imdbId);\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      errImdbId,\n      errImgUrl,\n      errTitle,\n      errImdbUrl,\n    } = this.state;\n\n    return (\n      <form name=\"form\" className=\"form\" onSubmit={this.onSubmit}>\n        <h2 className=\"form__title\">Add new movie</h2>\n        <label>\n          Title\n          <input\n            className={classNames('form__input', { form__inputErr: errTitle })}\n            value={this.state.title}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Movie name\"\n            required\n            onBlur={this.validationTitle}\n            onChange={this.handleInput}\n          />\n        </label>\n        {errTitle && <p className=\"form__err\">{errTitle}</p>}\n\n        <label>\n          Description\n          <textarea\n            value={this.state.description}\n            className=\"form__input form__text\"\n            name=\"description\"\n            placeholder=\"Write about movie\"\n            onChange={this.handleInput}\n          />\n        </label>\n\n        <label>\n          ImgUrl\n          <input\n            value={this.state.imgUrl}\n            className={classNames('form__input', { form__inputErr: errImgUrl })}\n            placeholder=\"https://m.media-amazon.com\"\n            type=\"text\"\n            name=\"imgUrl\"\n            required\n            onBlur={this.validationImgUrl}\n            onChange={this.handleInput}\n          />\n        </label>\n        {errImgUrl && <p className=\"form__err\">{errImgUrl}</p>}\n\n        <label>\n          ImdbUrl\n          <input\n            value={this.state.imdbUrl}\n            className={classNames('form__input',\n              { form__inputErr: errImdbUrl })}\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"https://m.media-amazon.com\"\n            required\n            onBlur={this.validationImdbUrl}\n            onChange={this.handleInput}\n          />\n        </label>\n        {errImdbUrl && <p className=\"form__err\">{errImdbUrl}</p>}\n\n        <label>\n          ImdbId\n          <input\n            value={this.state.imdbId}\n            className={classNames('form__input', { form__inputErr: errImdbId })}\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"tt0314331\"\n            required\n            onBlur={this.validationImdbId}\n            onChange={this.handleInput}\n          />\n        </label>\n        {errImdbId && <p className=\"form__err\">{errImdbId}</p>}\n\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n          disabled={!this.state.title\n             || !this.state.imgUrl\n             || !this.state.imdbUrl\n             || !this.state.imdbId}\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  ) => {\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState((state) => ({\n      movies: [movie, ...state.movies],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}